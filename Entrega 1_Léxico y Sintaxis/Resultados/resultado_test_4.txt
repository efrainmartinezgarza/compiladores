[RESULTADO] EXITOSO
--------------------------------------------------

Código original:
------------------------------

/* Prueba: program_funcs, funcs_no_vars, body_statement, assign, factor_id, factor_cte (INT) */

program TestProgramWithFuncs;
var myOtherVar: int;

void MyFunction() [ var myVar: int; { myVar = 10; } ];
main
{
  myOtherVar = 5;
}
end


--------------------------------------------------

Tokens encontrados:
------------------------------
Token            |   Carácter
------------------------------
PROGRAM_KWORD    | 'program' 
ID               | 'TestProgramWithFuncs'
SEMICOLON        | ';'       
VAR_KWORD        | 'var'     
ID               | 'myOtherVar'
COLON            | ':'       
INT_KWORD        | 'int'     
SEMICOLON        | ';'       
VOID_KWORD       | 'void'    
ID               | 'MyFunction'
L_PARENTHESIS    | '('       
R_PARENTHESIS    | ')'       
L_BRACKET        | '['       
VAR_KWORD        | 'var'     
ID               | 'myVar'   
COLON            | ':'       
INT_KWORD        | 'int'     
SEMICOLON        | ';'       
L_CURLY_BRACE    | '{'       
ID               | 'myVar'   
EQUAL            | '='       
CTE              | '10'      
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
R_BRACKET        | ']'       
SEMICOLON        | ';'       
MAIN_KWORD       | 'main'    
L_CURLY_BRACE    | '{'       
ID               | 'myOtherVar'
EQUAL            | '='       
CTE              | '5'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
END_KWORD        | 'end'     


Árbol sintáctico (raw):
------------------------------
program_vars_funcs
  program
  TestProgramWithFuncs
  ;
  vars_one_id
    var
    myOtherVar
    :
    type_int	int
    ;
  funcs_simple
    void
    MyFunction
    (
    )
    [
    vars_one_id
      var
      myVar
      :
      type_int	int
      ;
    body_statement
      {
      statement
        assign
          myVar
          =
          expression_simple
            exp_simple
              term_simple
                factor_cte	10
          ;
      }
    ]
    ;
  main
  body_statement
    {
    statement
      assign
        myOtherVar
        =
        expression_simple
          exp_simple
            term_simple
              factor_cte	5
        ;
    }
  end



Árbol transformado (AST):
------------------------------
{'type': 'program_vars_funcs', 'program_name': {'type': 'id', 'value': 'TestProgramWithFuncs'}, 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'myOtherVar'}, 'type': {'type': 'type_int', 'value': 'int'}}]}, 'funcs': [{'type': 'funcs_simple', 'funcs_name': {'type': 'id', 'value': 'MyFunction'}, 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'myVar'}, 'type': {'type': 'type_int', 'value': 'int'}}], 'myVar': {'type': 'int', 'assigned': True, 'address': 1000}}, 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'myVar'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 10}}}}}}]}}], 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'myOtherVar'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 5}}}}}}]}}


Directorio de funciones y variables:
------------------------------
Scope: global
Start Point: 0
  Variables:
    myOtherVar : int | Dirección: 3000
  Recursos: vars(int=1)

Scope: MyFunction
Start Point: 1
  Variables:
    myVar : int | Dirección: 1000
  Recursos: vars(int=1)



Cuádruplos generados:
------------------------------
0   10                               3         
1   7          7000                  1000      
2   16                                         
3   7          7001                  3000      


Tabla de constantes:
------------------------------
Valor: 10         | Tipo: int        | Dirección: 7000      
Valor: 5          | Tipo: int        | Dirección: 7001      


Uso de memoria:
------------------------------
LOCAL
INT -> Rango: 1000 - 1999 | Dirección actual: 1001
FLOAT -> Rango: 2000 - 2999 | Dirección actual: 2000
-----------------------------------------------------------
GLOBAL
INT -> Rango: 3000 - 3999 | Dirección actual: 3001
FLOAT -> Rango: 4000 - 4999 | Dirección actual: 4000
-----------------------------------------------------------
TEMPORAL
INT -> Rango: 5000 - 5999 | Dirección actual: 5000
FLOAT -> Rango: 6000 - 6999 | Dirección actual: 6000
-----------------------------------------------------------
CONSTANTE
INT -> Rango: 7000 - 7999 | Dirección actual: 7002
FLOAT -> Rango: 8000 - 8999 | Dirección actual: 8000
STRING -> Rango: 9000 - 9999 | Dirección actual: 9000
-----------------------------------------------------------


Salida de la Máquina Virtual:
------------------------------
