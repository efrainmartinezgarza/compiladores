[RESULTADO] EXITOSO
--------------------------------------------------

Código original:
------------------------------
/* Prueba: condition_if_else, expression_less_than, expression_not_equal */
program TestIfElseCondition;
var
  score : int;
  grade : int;
main
{
  score = 75;
  if (score < 60) {
    grade = 3;
  } else {
    grade = 1; 
  };

  if (score != 100) {
    print("No sacaste 100.");
  };
}
end


--------------------------------------------------

Tokens encontrados:
------------------------------
Token            |   Carácter
------------------------------
PROGRAM_KWORD    | 'program' 
ID               | 'TestIfElseCondition'
SEMICOLON        | ';'       
VAR_KWORD        | 'var'     
ID               | 'score'   
COLON            | ':'       
INT_KWORD        | 'int'     
SEMICOLON        | ';'       
ID               | 'grade'   
COLON            | ':'       
INT_KWORD        | 'int'     
SEMICOLON        | ';'       
MAIN_KWORD       | 'main'    
L_CURLY_BRACE    | '{'       
ID               | 'score'   
EQUAL            | '='       
CTE              | '75'      
SEMICOLON        | ';'       
IF_KWORD         | 'if'      
L_PARENTHESIS    | '('       
ID               | 'score'   
LESS_THAN        | '<'       
CTE              | '60'      
R_PARENTHESIS    | ')'       
L_CURLY_BRACE    | '{'       
ID               | 'grade'   
EQUAL            | '='       
CTE              | '3'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
ELSE_KWORD       | 'else'    
L_CURLY_BRACE    | '{'       
ID               | 'grade'   
EQUAL            | '='       
CTE              | '1'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
SEMICOLON        | ';'       
IF_KWORD         | 'if'      
L_PARENTHESIS    | '('       
ID               | 'score'   
NOT_EQUAL        | '!='      
CTE              | '100'     
R_PARENTHESIS    | ')'       
L_CURLY_BRACE    | '{'       
PRINT_KWORD      | 'print'   
L_PARENTHESIS    | '('       
STRING           | '"No sacaste 100."'
R_PARENTHESIS    | ')'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
END_KWORD        | 'end'     


Árbol sintáctico (raw):
------------------------------
program_vars
  program
  TestIfElseCondition
  ;
  vars_one_id
    var
    score
    :
    type_int	int
    ;
    grade
    :
    type_int	int
    ;
  main
  body_statement
    {
    statement
      assign
        score
        =
        expression_simple
          exp_simple
            term_simple
              factor_cte	75
        ;
    statement
      condition_if_else
        if
        (
        expression_less_than
          exp_simple
            term_simple
              factor_id	score
          <
          exp_simple
            term_simple
              factor_cte	60
        )
        body_statement
          {
          statement
            assign
              grade
              =
              expression_simple
                exp_simple
                  term_simple
                    factor_cte	3
              ;
          }
        else
        body_statement
          {
          statement
            assign
              grade
              =
              expression_simple
                exp_simple
                  term_simple
                    factor_cte	1
              ;
          }
        ;
    statement
      condition_if
        if
        (
        expression_not_equal
          exp_simple
            term_simple
              factor_id	score
          !=
          exp_simple
            term_simple
              factor_cte	100
        )
        body_statement
          {
          statement
            print_string
              print
              (
              "No sacaste 100."
              )
              ;
          }
        ;
    }
  end



Árbol transformado (AST):
------------------------------
{'type': 'program_vars', 'program_name': {'type': 'id', 'value': 'TestIfElseCondition'}, 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'score'}, 'type': {'type': 'type_int', 'value': 'int'}}, {'id': {'type': 'id', 'value': 'grade'}, 'type': {'type': 'type_int', 'value': 'int'}}]}, 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'score'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 75}}}}}}, {'type': 'statement', 'value': {'type': 'condition_if_else', 'condition': {'type': 'expression_less_than', 'value': [{'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'score'}}}}, Token('LESS_THAN', '<'), {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 60}}}]}, 'body1': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'grade'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 3}}}}}}]}, 'body2': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'grade'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 1}}}}}}]}}}, {'type': 'statement', 'value': {'type': 'condition_if', 'condition': {'type': 'expression_not_equal', 'value': [{'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'score'}}}}, Token('NOT_EQUAL', '!='), {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 100}}}]}, 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'print_string', 'value': {'type': 'string', 'value': 'No sacaste 100.'}}}]}}}]}}


Directorio de funciones y variables:
------------------------------
Scope: global
Start Point: 0
  Variables:
    score : int | Dirección: 3000
    grade : int | Dirección: 3001
  Recursos: temporals(int=2), vars(int=2)



Cuádruplos generados:
------------------------------
0   10                               1         
1   7          7000                  3000      
2   6          3000       7001       5000      
3   11         5000                  6         
4   7          7002                  3001      
5   10                               7         
6   7          7003                  3001      
7   8          3000       7004       5001      
8   11         5001                  11        
9   9                                9000      
10  17                                         


Tabla de constantes:
------------------------------
Valor: 75         | Tipo: int        | Dirección: 7000      
Valor: 60         | Tipo: int        | Dirección: 7001      
Valor: 3          | Tipo: int        | Dirección: 7002      
Valor: 1          | Tipo: int        | Dirección: 7003      
Valor: 100        | Tipo: int        | Dirección: 7004      
Valor: No sacaste 100. | Tipo: string     | Dirección: 9000      


Uso de memoria:
------------------------------
LOCAL
INT -> Rango: 1000 - 1999 | Dirección actual: 1000
FLOAT -> Rango: 2000 - 2999 | Dirección actual: 2000
-----------------------------------------------------------
GLOBAL
INT -> Rango: 3000 - 3999 | Dirección actual: 3002
FLOAT -> Rango: 4000 - 4999 | Dirección actual: 4000
-----------------------------------------------------------
TEMPORAL
INT -> Rango: 5000 - 5999 | Dirección actual: 5002
FLOAT -> Rango: 6000 - 6999 | Dirección actual: 6000
-----------------------------------------------------------
CONSTANTE
INT -> Rango: 7000 - 7999 | Dirección actual: 7005
FLOAT -> Rango: 8000 - 8999 | Dirección actual: 8000
STRING -> Rango: 9000 - 9999 | Dirección actual: 9001
-----------------------------------------------------------


Salida de la Máquina Virtual:
------------------------------
No sacaste 100.
