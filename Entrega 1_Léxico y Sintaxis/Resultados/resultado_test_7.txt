[RESULTADO] EXITOSO
--------------------------------------------------

Código original:
------------------------------
/* Prueba: funcs_multiple_ids (function with multiple parameters) */
program TestFuncWithMultiParams;
var
  sumResult : float;
void SumThem(val1 : int, val2 : float) [
  var
    temp : float;
  {
    temp = val2; 
    sumResult = temp + val1;
  }
];
main
{
  SumThem(3, 3.0);
  print(sumResult);
}
end


--------------------------------------------------

Tokens encontrados:
------------------------------
Token            |   Carácter
------------------------------
PROGRAM_KWORD    | 'program' 
ID               | 'TestFuncWithMultiParams'
SEMICOLON        | ';'       
VAR_KWORD        | 'var'     
ID               | 'sumResult'
COLON            | ':'       
FLOAT_KWORD      | 'float'   
SEMICOLON        | ';'       
VOID_KWORD       | 'void'    
ID               | 'SumThem' 
L_PARENTHESIS    | '('       
ID               | 'val1'    
COLON            | ':'       
INT_KWORD        | 'int'     
COMMA            | ','       
ID               | 'val2'    
COLON            | ':'       
FLOAT_KWORD      | 'float'   
R_PARENTHESIS    | ')'       
L_BRACKET        | '['       
VAR_KWORD        | 'var'     
ID               | 'temp'    
COLON            | ':'       
FLOAT_KWORD      | 'float'   
SEMICOLON        | ';'       
L_CURLY_BRACE    | '{'       
ID               | 'temp'    
EQUAL            | '='       
ID               | 'val2'    
SEMICOLON        | ';'       
ID               | 'sumResult'
EQUAL            | '='       
ID               | 'temp'    
PLUS             | '+'       
ID               | 'val1'    
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
R_BRACKET        | ']'       
SEMICOLON        | ';'       
MAIN_KWORD       | 'main'    
L_CURLY_BRACE    | '{'       
ID               | 'SumThem' 
L_PARENTHESIS    | '('       
CTE              | '3'       
COMMA            | ','       
CTE              | '3.0'     
R_PARENTHESIS    | ')'       
SEMICOLON        | ';'       
PRINT_KWORD      | 'print'   
L_PARENTHESIS    | '('       
ID               | 'sumResult'
R_PARENTHESIS    | ')'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
END_KWORD        | 'end'     


Árbol sintáctico (raw):
------------------------------
program_vars_funcs
  program
  TestFuncWithMultiParams
  ;
  vars_one_id
    var
    sumResult
    :
    type_float	float
    ;
  funcs_multiple_ids
    void
    SumThem
    (
    val1
    :
    type_int	int
    ,
    val2
    :
    type_float	float
    )
    [
    vars_one_id
      var
      temp
      :
      type_float	float
      ;
    body_statement
      {
      statement
        assign
          temp
          =
          expression_simple
            exp_simple
              term_simple
                factor_id	val2
          ;
      statement
        assign
          sumResult
          =
          expression_simple
            exp_plus
              exp_simple
                term_simple
                  factor_id	temp
              +
              term_simple
                factor_id	val1
          ;
      }
    ]
    ;
  main
  body_statement
    {
    statement
      f_call_multiple_expressions
        SumThem
        (
        expression_simple
          exp_simple
            term_simple
              factor_cte	3
        ,
        expression_simple
          exp_simple
            term_simple
              factor_cte	3.0
        )
        ;
    statement
      f_call_one_expression
        print
        (
        expression_simple
          exp_simple
            term_simple
              factor_id	sumResult
        )
        ;
    }
  end



Árbol transformado (AST):
------------------------------
{'type': 'program_vars_funcs', 'program_name': {'type': 'id', 'value': 'TestFuncWithMultiParams'}, 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'sumResult'}, 'type': {'type': 'type_float', 'value': 'float'}}]}, 'funcs': [{'type': 'funcs_multiple_ids', 'funcs_name': {'type': 'id', 'value': 'SumThem'}, 'parameters': [{'id': {'type': 'id', 'value': 'val1'}, 'type': {'type': 'type_int', 'value': 'int'}}, {'id': {'type': 'id', 'value': 'val2'}, 'type': {'type': 'type_float', 'value': 'float'}}], 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'temp'}, 'type': {'type': 'type_float', 'value': 'float'}}], 'val1': {'type': 'int', 'assigned': True, 'address': 1000}, 'val2': {'type': 'float', 'assigned': True, 'address': 2000}, 'temp': {'type': 'float', 'assigned': True, 'address': 2001}}, 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'temp'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'val2'}}}}}}}, {'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'sumResult'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp', 'value': [{'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'temp'}}}}, Token('PLUS', '+'), {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'val1'}}}]}}}}]}}], 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'f_call_multiple_expressions', 'function': {'type': 'id', 'value': 'SumThem'}, 'value': [{'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 3}}}}, {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 3.0}}}}]}}, {'type': 'print_expression', 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'sumResult'}}}}}}]}}


Directorio de funciones y variables:
------------------------------
Scope: global
Start Point: 0
  Variables:
    sumResult : float | Dirección: 4000
  Recursos: vars(float=1)

Scope: SumThem
Start Point: 1
  Parámetros:
    val1 : int
    val2 : float
  Variables:
    val1 : int | Dirección: 1000
    val2 : float | Dirección: 2000
    temp : float | Dirección: 2001
  Recursos: temporals(float=1), vars(float=1), params(int=1, float=1)



Cuádruplos generados:
------------------------------
0   10                               5         
1   7          2000                  2001      
2   1          2001       1000       6000      
3   7          6000                  4000      
4   16                                         
5   13         SumThem                         
6   15         7000                  p1        
7   15         8000                  p2        
8   14         SumThem                         
9   9                                4000      
10  17                                         


Tabla de constantes:
------------------------------
Valor: 3          | Tipo: int        | Dirección: 7000      
Valor: 3.0        | Tipo: float      | Dirección: 8000      


Uso de memoria:
------------------------------
LOCAL
INT -> Rango: 1000 - 1999 | Dirección actual: 1001
FLOAT -> Rango: 2000 - 2999 | Dirección actual: 2002
-----------------------------------------------------------
GLOBAL
INT -> Rango: 3000 - 3999 | Dirección actual: 3000
FLOAT -> Rango: 4000 - 4999 | Dirección actual: 4001
-----------------------------------------------------------
TEMPORAL
INT -> Rango: 5000 - 5999 | Dirección actual: 5000
FLOAT -> Rango: 6000 - 6999 | Dirección actual: 6001
-----------------------------------------------------------
CONSTANTE
INT -> Rango: 7000 - 7999 | Dirección actual: 7001
FLOAT -> Rango: 8000 - 8999 | Dirección actual: 8001
STRING -> Rango: 9000 - 9999 | Dirección actual: 9000
-----------------------------------------------------------


Salida de la Máquina Virtual:
------------------------------
6.0
