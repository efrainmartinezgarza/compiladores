[RESULTADO] EXITOSO
--------------------------------------------------

📝 Tokens encontrados:
------------------------------
Token            |   Carácter
------------------------------
PROGRAM_KWORD    | 'program' 
ID               | 'myProgram'
SEMICOLON        | ';'       
VAR_KWORD        | 'var'     
ID               | 'x'       
COLON            | ':'       
INT_KWORD        | 'int'     
SEMICOLON        | ';'       
MAIN_KWORD       | 'main'    
L_CURLY_BRACE    | '{'       
ID               | 'x'       
EQUAL            | '='       
CTE              | '5'       
SEMICOLON        | ';'       
IF_KWORD         | 'if'      
L_PARENTHESIS    | '('       
ID               | 'x'       
LESS_THAN        | '<'       
CTE              | '5'       
R_PARENTHESIS    | ')'       
L_CURLY_BRACE    | '{'       
ID               | 'x'       
EQUAL            | '='       
ID               | 'x'       
PLUS             | '+'       
CTE              | '1'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
ELSE_KWORD       | 'else'    
L_CURLY_BRACE    | '{'       
ID               | 'x'       
EQUAL            | '='       
CTE              | '0'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
SEMICOLON        | ';'       
IF_KWORD         | 'if'      
L_PARENTHESIS    | '('       
ID               | 'x'       
GREATER_THAN     | '>'       
CTE              | '0'       
R_PARENTHESIS    | ')'       
L_CURLY_BRACE    | '{'       
PRINT_KWORD      | 'print'   
L_PARENTHESIS    | '('       
ID               | 'x'       
R_PARENTHESIS    | ')'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
END_KWORD        | 'end'     


Árbol sintáctico (raw):
------------------------------
program_vars
  program
  myProgram
  ;
  vars_one_id
    var
    x
    :
    type_int	int
    ;
  main
  body_statement
    {
    statement
      assign
        x
        =
        expression_simple
          exp_simple
            term_simple
              factor_cte	5
        ;
    statement
      condition_if_else
        if
        (
        expression_less_than
          exp_simple
            term_simple
              factor_id	x
          <
          exp_simple
            term_simple
              factor_cte	5
        )
        body_statement
          {
          statement
            assign
              x
              =
              expression_simple
                exp_plus
                  exp_simple
                    term_simple
                      factor_id	x
                  +
                  term_simple
                    factor_cte	1
              ;
          }
        else
        body_statement
          {
          statement
            assign
              x
              =
              expression_simple
                exp_simple
                  term_simple
                    factor_cte	0
              ;
          }
        ;
    statement
      condition_if
        if
        (
        expression_greater_than
          exp_simple
            term_simple
              factor_id	x
          >
          exp_simple
            term_simple
              factor_cte	0
        )
        body_statement
          {
          statement
            f_call_one_expression
              print
              (
              expression_simple
                exp_simple
                  term_simple
                    factor_id	x
              )
              ;
          }
        ;
    }
  end



Árbol transformado (AST):
------------------------------
{'type': 'program_vars', 'program_name': {'type': 'id', 'value': 'myProgram'}, 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'x'}, 'type': {'type': 'type_int', 'value': 'int'}}]}, 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'x'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 5}}}}}}, {'type': 'statement', 'value': {'type': 'condition_if_else', 'condition': {'type': 'expression_less_than', 'value': [{'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'x'}}}}, Token('LESS_THAN', '<'), {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 5}}}]}, 'body1': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'x'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp', 'value': [{'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'x'}}}}, Token('PLUS', '+'), {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 1}}]}}}}]}, 'body2': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'x'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 0}}}}}}]}}}, {'type': 'statement', 'value': {'type': 'condition_if', 'condition': {'type': 'expression_greater_than', 'value': [{'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'x'}}}}, Token('GREATER_THAN', '>'), {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 0}}}]}, 'body': {'type': 'body_statement', 'value': [{'type': 'print_expression', 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'x'}}}}}}]}}}]}}


Directorio de funciones y variables:
------------------------------
Scope: global
  Variables:
    x : int | Dirección: 3000



Cuádruplos generados:
------------------------------
0   7          7000                  3000      
1   6          3000       7000       5000      
2   11         5000                  6         
3   1          3000       7001       5001      
4   7          5001                  3000      
5   10                               7         
6   7          7002                  3000      
7   5          3000       7002       5002      
8   11         5002                  10        
9   9                                3000      


Tabla de constantes:
------------------------------
Valor: 5          | Tipo: int        | Dirección: 7000      
Valor: 1          | Tipo: int        | Dirección: 7001      
Valor: 0          | Tipo: int        | Dirección: 7002      


Uso de memoria:
------------------------------
LOCAL
INT -> Rango: 1000 - 1999 | Dirección actual: 1000
FLOAT -> Rango: 2000 - 2999 | Dirección actual: 2000
-----------------------------------------------------------
GLOBAL
INT -> Rango: 3000 - 3999 | Dirección actual: 3001
FLOAT -> Rango: 4000 - 4999 | Dirección actual: 4000
-----------------------------------------------------------
TEMPORAL
INT -> Rango: 5000 - 5999 | Dirección actual: 5003
FLOAT -> Rango: 6000 - 6999 | Dirección actual: 6000
-----------------------------------------------------------
CONSTANTE
INT -> Rango: 7000 - 7999 | Dirección actual: 7003
FLOAT -> Rango: 8000 - 8999 | Dirección actual: 8000
STRING -> Rango: 9000 - 9999 | Dirección actual: 9000
-----------------------------------------------------------
