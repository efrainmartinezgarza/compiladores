[RESULTADO] EXITOSO
--------------------------------------------------

Código original:
------------------------------
/*Prueba: funcs_id (function with one parameter) */

program TestFuncWithOneParam;
var
  result : int;

void Calculate(p1 : int) [
  {
    result = p1 * 2;
  }
];

main
{
  result = 0;
}
end

--------------------------------------------------

Tokens encontrados:
------------------------------
Token            |   Carácter
------------------------------
PROGRAM_KWORD    | 'program' 
ID               | 'TestFuncWithOneParam'
SEMICOLON        | ';'       
VAR_KWORD        | 'var'     
ID               | 'result'  
COLON            | ':'       
INT_KWORD        | 'int'     
SEMICOLON        | ';'       
VOID_KWORD       | 'void'    
ID               | 'Calculate'
L_PARENTHESIS    | '('       
ID               | 'p1'      
COLON            | ':'       
INT_KWORD        | 'int'     
R_PARENTHESIS    | ')'       
L_BRACKET        | '['       
L_CURLY_BRACE    | '{'       
ID               | 'result'  
EQUAL            | '='       
ID               | 'p1'      
MULT_SIGN        | '*'       
CTE              | '2'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
R_BRACKET        | ']'       
SEMICOLON        | ';'       
MAIN_KWORD       | 'main'    
L_CURLY_BRACE    | '{'       
ID               | 'result'  
EQUAL            | '='       
CTE              | '0'       
SEMICOLON        | ';'       
R_CURLY_BRACE    | '}'       
END_KWORD        | 'end'     


Árbol sintáctico (raw):
------------------------------
program_vars_funcs
  program
  TestFuncWithOneParam
  ;
  vars_one_id
    var
    result
    :
    type_int	int
    ;
  funcs_id_no_vars
    void
    Calculate
    (
    p1
    :
    type_int	int
    )
    [
    body_statement
      {
      statement
        assign
          result
          =
          expression_simple
            exp_simple
              term_mult_sign
                term_simple
                  factor_id	p1
                *
                factor_cte	2
          ;
      }
    ]
    ;
  main
  body_statement
    {
    statement
      assign
        result
        =
        expression_simple
          exp_simple
            term_simple
              factor_cte	0
        ;
    }
  end



Árbol transformado (AST):
------------------------------
{'type': 'program_vars_funcs', 'program_name': {'type': 'id', 'value': 'TestFuncWithOneParam'}, 'vars': {'type': 'vars_one_id', 'declarations': [{'id': {'type': 'id', 'value': 'result'}, 'type': {'type': 'type_int', 'value': 'int'}}]}, 'funcs': [{'type': 'funcs_id_no_vars', 'funcs_name': {'type': 'id', 'value': 'Calculate'}, 'param': {'type': 'id', 'value': 'p1'}, 'param_type': {'type': 'type_int', 'value': 'int'}, 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'result'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term', 'value': [{'type': 'term_simple', 'value': {'type': 'factor_id', 'value': {'type': 'id', 'value': 'p1'}}}, Token('MULT_SIGN', '*'), {'type': 'factor_cte', 'value': 2}]}}}}}]}}], 'body': {'type': 'body_statement', 'value': [{'type': 'statement', 'value': {'type': 'assign', 'id': {'type': 'id', 'value': 'result'}, 'value': {'type': 'expression_simple', 'value': {'type': 'exp_simple', 'value': {'type': 'term_simple', 'value': {'type': 'factor_cte', 'value': 0}}}}}}]}}


Directorio de funciones y variables:
------------------------------
Scope: global
Start Point: 0
  Variables:
    result : int | Dirección: 3000
  Recursos: vars(int=1)

Scope: Calculate
Start Point: 1
  Parámetros:
    p1 : int
  Variables:
    p1 : int | Dirección: 1000
  Recursos: temporals(int=1), params(int=1)



Cuádruplos generados:
------------------------------
0   10                               4         
1   3          1000       7000       5000      
2   7          5000                  3000      
3   16                                         
4   7          7001                  3000      


Tabla de constantes:
------------------------------
Valor: 2          | Tipo: int        | Dirección: 7000      
Valor: 0          | Tipo: int        | Dirección: 7001      


Uso de memoria:
------------------------------
LOCAL
INT -> Rango: 1000 - 1999 | Dirección actual: 1001
FLOAT -> Rango: 2000 - 2999 | Dirección actual: 2000
-----------------------------------------------------------
GLOBAL
INT -> Rango: 3000 - 3999 | Dirección actual: 3001
FLOAT -> Rango: 4000 - 4999 | Dirección actual: 4000
-----------------------------------------------------------
TEMPORAL
INT -> Rango: 5000 - 5999 | Dirección actual: 5001
FLOAT -> Rango: 6000 - 6999 | Dirección actual: 6000
-----------------------------------------------------------
CONSTANTE
INT -> Rango: 7000 - 7999 | Dirección actual: 7002
FLOAT -> Rango: 8000 - 8999 | Dirección actual: 8000
STRING -> Rango: 9000 - 9999 | Dirección actual: 9000
-----------------------------------------------------------


Salida de la Máquina Virtual:
------------------------------
